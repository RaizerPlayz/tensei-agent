# Application configuration.

# Include the tensei config first.
include "tensei.conf"
# Include the extactors config file
include "extractors.conf"

# Configure the akka system.
akka {
  extensions = [ "akka.cluster.metrics.ClusterMetricsExtension" ]

  loggers                          = [akka.event.slf4j.Slf4jLogger]
  logging-filter                   = "akka.event.slf4j.Slf4jLoggingFilter"
  loglevel                         = info
  log-dead-letters                 = 5
  log-dead-letters-during-shutdown = on
  logger-startup-timeout = 30s

  actor {
    provider = akka.cluster.ClusterActorRefProvider

    debug {
      lifecycle = off
      receive = off
      unhandled = on
    }
  }

  cluster {
    # A list of seed nodes for the tensei agent akka cluster.
    # Beware that the first seed node has to be started first!
    seed-nodes                  = [
      "akka.tcp://tensei-agent@"${tensei.agent.hostname}":"${tensei.agent.port}
    ]
    roles = [agent]
    # Should the 'leader' in the cluster be allowed to automatically mark
    # unreachable nodes as DOWN after a configured time of unreachability?
    # Using auto-down implies that two separate clusters will automatically be
    # formed in case of network partition.
    # Disable with "off" or specify a duration to enable auto-down.
    auto-down-unreachable-after = off

    # Configuration for the cluster client which we are using to talk
    # to the server/frontend cluster.
    client {
      # If connection to the receiptionist is lost and the client has not been
      # able to acquire a new connection for this long the client will stop itself.
      # This duration makes it possible to watch the cluster client and react on a more permanent
      # loss of connection with the cluster, for example by accessing some kind of
      # service registry for an updated set of initial contacts to start a new cluster client with.
      # If this is not wanted it can be set to "off" to disable the timeout and retry
      # forever.
      reconnect-timeout = off
    }

    # Disable old metrics because we now use the new metrics extension.
    metrics.enabled = off
  }

  remote {
    enabled-transports          = [akka.remote.netty.tcp]
    log-remote-lifecycle-events = off

    transport-failure-detector {
      # How often keep-alive heartbeat messages should be sent to each connection.
      heartbeat-interval = 10 seconds
      # Number of potentially lost/delayed heartbeats that will be
      # accepted before considering it to be an anomaly.
      # This margin is important to be able to survive sudden, occasional,
      # pauses in heartbeat arrivals, due to for example garbage collect or
      # network drop.
      acceptable-heartbeat-pause = 60 seconds
      # After the heartbeat request has been sent the first failure detection
      # will start after this period, even though no heartbeat mesage has
      # been received.
      expected-response-after = 5 s
    }

    netty.tcp {
      hostname = ${tensei.agent.hostname}
      port     = ${tensei.agent.port}

      # Sets the send buffer size of the Sockets,
      # set to 0b for platform default
      send-buffer-size = 2097152b

      # Sets the receive buffer size of the Sockets,
      # set to 0b for platform default
      receive-buffer-size = 2097152b

      # Maximum message size the transport will accept, but at least
      # 32000 bytes.
      # Please note that UDP does not support arbitrary large datagrams,
      # so this setting has to be chosen carefully when using UDP.
      # Both send-buffer-size and receive-buffer-size settings has to
      # be adjusted to be able to buffer messages of maximum size.
      maximum-frame-size = 1048576b
    }
  }

  # Configuration for akka testkit
  test {
    # factor by which to scale timeouts during tests, e.g. to account for shared
    # build system load
    timefactor = 1.0

    # duration of EventFilter.intercept waits after the block is finished until
    # all required messages are received
    filter-leeway = 3s

    # duration to wait in expectMsg and friends outside of within() block
    # by default
    single-expect-default = 3s

    # The timeout that is added as an implicit by DefaultTimeout trait
    default-timeout = 5s

    calling-thread-dispatcher {
      type = akka.testkit.CallingThreadDispatcherConfigurator
    }
  }
}
